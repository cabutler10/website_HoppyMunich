"use strict";var precacheConfig=[["/index.html","d25a8dad2d1228088972185fcce6dfe5"],["/static/css/main.57dcfdb1.css","d89563b537ece6da70525ca7ea689dde"],["/static/js/main.09de57b1.js","c4f26177858f666d4f1f30de28f000f2"],["/static/media/about1.a331dbf6.jpg","a331dbf60a0295d03dfa72714952ea6a"],["/static/media/about2.ea2a2e05.jpg","ea2a2e05d5f4f5f4297c2a8b2e17120f"],["/static/media/about3.f3ca2218.jpg","f3ca2218b17f9b9edba71e61d318c15d"],["/static/media/about4.e3079432.jpg","e307943247dcd3c3957ade968574bca2"],["/static/media/bottomShapes.0e790cd5.png","0e790cd505868b47882fcf20007ca10d"],["/static/media/contact2.507bfff2.jpg","507bfff24a206594d203afc506afed88"],["/static/media/contact3.47fb9cd4.jpg","47fb9cd461efe9f8c37d5383d164af16"],["/static/media/form.d2810b6e.pdf","d2810b6eba52b071c3a36f9f2a510449"],["/static/media/iconAward.f8041d5c.png","f8041d5cc363bae2d63d95c27a269a50"],["/static/media/insta1.bd2a7342.jpg","bd2a734201f9b229683b5bab5b62c415"],["/static/media/insta2.64075bc8.jpg","64075bc80f68eb030fbb124c9233f436"],["/static/media/insta3.1db1d107.jpg","1db1d1075220c696d91c44afaa612e64"],["/static/media/insta4.a3223853.jpg","a32238530f0d8cfc5ffc78679d07165c"],["/static/media/insta5.246270f2.jpg","246270f2f39104c52ba711d002ca9726"],["/static/media/logo.037f1d0e.svg","037f1d0eb4a3d160d68772b4776808cf"],["/static/media/sarah.16e523e7.jpg","16e523e7a65ab5842f43e78dfc90c9e7"],["/static/media/sarah2.58d2247c.jpg","58d2247cce55341df3f616c3ea4a9934"],["/static/media/sarah3.360c45bd.jpg","360c45bd7eb4e6db8e9dfc63df4b2935"],["/static/media/topShapes.26bfd3d0.png","26bfd3d09f448c5d6b63d032c66d3f49"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var c="/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(c,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});